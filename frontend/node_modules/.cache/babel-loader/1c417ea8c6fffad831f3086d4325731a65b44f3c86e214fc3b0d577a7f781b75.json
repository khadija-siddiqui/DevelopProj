{"ast":null,"code":"var _jsxFileName = \"/Users/khadijasiddiqui/Downloads/developmidterm/frontend/src/components/NotesComp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//NotesComp -a form for users to input their note info\n//functional comp which takes onAdd as its parmeter\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesComp(props) {\n  _s();\n  const [note, setNote] = useState({\n    //state var 'note' to manage the input values for note\n    //using 'useState as hook to initalize and update state\n    //initialized with empty strings:\n    title: \"\",\n    content: \"\"\n  });\n\n  //change function to hande changes in input fields of form\n  //updates the 'note' state w/ new values user entered\n  function change(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    //calles 'setNote' to update 'note' state\n    //ensures state updates based on prev state\n    setNote(prevNote => {\n      //returns with updated property\n      return Object.assign({}, prevNote, {\n        [name]: value\n      });\n    });\n  }\n\n  //handles submission of form\n  //needed to add note to application state & reset form\n  function submit(event) {\n    props.onAdd(note);\n    setNote({\n      //resets 'note' state to an obj w empty strings:\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: change,\n        value: note.title,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        onChange: change,\n        value: note.content,\n        placeholder: \"Take a note...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submit,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(NotesComp, \"Jkvt47q6Gz60WY385c1goPORcfA=\");\n_c = NotesComp;\nexport default NotesComp;\nvar _c;\n$RefreshReg$(_c, \"NotesComp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NotesComp","props","_s","note","setNote","title","content","change","event","name","value","target","prevNote","Object","assign","submit","onAdd","preventDefault","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/khadijasiddiqui/Downloads/developmidterm/frontend/src/components/NotesComp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n//NotesComp -a form for users to input their note info\n//functional comp which takes onAdd as its parmeter\nfunction NotesComp(props) {\n  const [note, setNote] = useState({\n    //state var 'note' to manage the input values for note\n    //using 'useState as hook to initalize and update state\n    //initialized with empty strings:\n    title: \"\",\n    content: \"\",\n  });\n\n  //change function to hande changes in input fields of form\n  //updates the 'note' state w/ new values user entered\n  function change(event) {\n    const { name, value } = event.target;\n    //calles 'setNote' to update 'note' state\n    //ensures state updates based on prev state\n    setNote((prevNote) => {\n      //returns with updated property\n      return Object.assign({}, prevNote, {\n        [name]: value,\n      });\n    });\n  }\n\n  //handles submission of form\n  //needed to add note to application state & reset form\n  function submit(event) {\n    props.onAdd(note);\n    setNote({\n      //resets 'note' state to an obj w empty strings:\n      title: \"\",\n      content: \"\",\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          name=\"title\"\n          onChange={change}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={change}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button onClick={submit}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NotesComp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/B;IACA;IACA;IACAQ,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA;EACA,SAASC,MAAMA,CAACC,KAAK,EAAE;IACrB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpC;IACA;IACAP,OAAO,CAAEQ,QAAQ,IAAK;MACpB;MACA,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,QAAQ,EAAE;QACjC,CAACH,IAAI,GAAGC;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;EACA;EACA,SAASK,MAAMA,CAACP,KAAK,EAAE;IACrBP,KAAK,CAACe,KAAK,CAACb,IAAI,CAAC;IACjBC,OAAO,CAAC;MACN;MACAC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;IACFE,KAAK,CAACS,cAAc,CAAC,CAAC;EACxB;EAEA,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QACEU,IAAI,EAAC,OAAO;QACZU,QAAQ,EAAEZ,MAAO;QACjBG,KAAK,EAAEP,IAAI,CAACE,KAAM;QAClBe,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFzB,OAAA;QACEU,IAAI,EAAC,SAAS;QACdU,QAAQ,EAAEZ,MAAO;QACjBG,KAAK,EAAEP,IAAI,CAACG,OAAQ;QACpBc,WAAW,EAAC,gBAAgB;QAC5BK,IAAI,EAAC;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFzB,OAAA;QAAQ2B,OAAO,EAAEX,MAAO;QAAAG,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtB,EAAA,CAvDQF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAyDlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}