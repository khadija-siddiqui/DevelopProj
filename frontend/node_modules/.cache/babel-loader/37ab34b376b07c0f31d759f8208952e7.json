{"ast":null,"code":"var _jsxFileName = \"/Users/khadijasiddiqui/Downloads/developmidterm/frontend/src/components/NotesComp.jsx\";\nimport React, { useState } from \"react\";\n\n//NotesComp -a form for users to input their note info\n//functional comp which takes onAdd as its parmeter\nfunction NotesComp(props) {\n  const [note, setNote] = useState({\n    //state var 'note' to manage the input values for note\n    //using 'useState as hook to initalize and update state\n    //initialized with empty strings:\n    title: \"\",\n    content: \"\"\n  });\n\n  //change function to hande changes in input fields of form\n  //updates the 'note' state w/ new values user entered\n  function change(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    //calles 'setNote' to update 'note' state\n    //ensures state updates based on prev state\n    setNote(prevNote => {\n      //returns with updated property\n      return Object.assign({}, prevNote, {\n        [name]: value\n      });\n    });\n  }\n\n  //handles submission of form\n  //needed to add note to application state & reset form\n  function submit(event) {\n    props.onAdd(note);\n    setNote({\n      //resets 'note' state to an obj w empty strings:\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: change,\n    value: note.title,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: change,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n}\nexport default NotesComp;","map":{"version":3,"names":["React","useState","NotesComp","props","note","setNote","title","content","change","event","name","value","target","prevNote","Object","assign","submit","onAdd","preventDefault","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","onClick"],"sources":["/Users/khadijasiddiqui/Downloads/developmidterm/frontend/src/components/NotesComp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n//NotesComp -a form for users to input their note info\n//functional comp which takes onAdd as its parmeter\nfunction NotesComp(props) {\n  const [note, setNote] = useState({\n    //state var 'note' to manage the input values for note\n    //using 'useState as hook to initalize and update state\n    //initialized with empty strings:\n    title: \"\",\n    content: \"\",\n  });\n\n  //change function to hande changes in input fields of form\n  //updates the 'note' state w/ new values user entered\n  function change(event) {\n    const { name, value } = event.target;\n    //calles 'setNote' to update 'note' state\n    //ensures state updates based on prev state\n    setNote((prevNote) => {\n      //returns with updated property\n      return Object.assign({}, prevNote, {\n        [name]: value,\n      });\n    });\n  }\n\n  //handles submission of form\n  //needed to add note to application state & reset form\n  function submit(event) {\n    props.onAdd(note);\n    setNote({\n      //resets 'note' state to an obj w empty strings:\n      title: \"\",\n      content: \"\",\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          name=\"title\"\n          onChange={change}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={change}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button onClick={submit}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NotesComp;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAC/B;IACA;IACA;IACAK,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA;EACA,SAASC,MAAMA,CAACC,KAAK,EAAE;IACrB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpC;IACA;IACAP,OAAO,CAAEQ,QAAQ,IAAK;MACpB;MACA,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,QAAQ,EAAE;QACjC,CAACH,IAAI,GAAGC;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;EACA;EACA,SAASK,MAAMA,CAACP,KAAK,EAAE;IACrBN,KAAK,CAACc,KAAK,CAACb,IAAI,CAAC;IACjBC,OAAO,CAAC;MACN;MACAC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;IACFE,KAAK,CAACS,cAAc,CAAC,CAAC;EACxB;EAEA,oBACElB,KAAA,CAAAmB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzB,KAAA,CAAAmB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzB,KAAA,CAAAmB,aAAA;IACET,IAAI,EAAC,OAAO;IACZgB,QAAQ,EAAElB,MAAO;IACjBG,KAAK,EAAEP,IAAI,CAACE,KAAM;IAClBqB,WAAW,EAAC,OAAO;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpB,CAAC,eACFzB,KAAA,CAAAmB,aAAA;IACET,IAAI,EAAC,SAAS;IACdgB,QAAQ,EAAElB,MAAO;IACjBG,KAAK,EAAEP,IAAI,CAACG,OAAQ;IACpBoB,WAAW,EAAC,gBAAgB;IAC5BC,IAAI,EAAC,GAAG;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACFzB,KAAA,CAAAmB,aAAA;IAAQU,OAAO,EAAEb,MAAO;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CAChC,CACH,CAAC;AAEV;AAEA,eAAevB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}